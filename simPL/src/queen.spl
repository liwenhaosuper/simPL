let 
	check = fun q -> fun p -> 
		let i = 1 in
			let b = q in
				let tag = true in
					while not (b = nil) and tag do
						let h = head b in
							tag := not (h = p or h - p = i or p - h = i);
							b := tail b;
							i := i + 1
						end
					end;
					tag
				end
			end
		end
	in
	let solve = fun n ->
		let queens = nil in
			if n < 0 or n = 0 
			then queens 
			else
				let i = 1 in
					while i < n + 1 do
						let j = 1 in
							while j < n + 1 do
								if ((check queens) j) 
								then
									queens := j :: queens;
									j := n + 1
								else
									if j = n then
										while (j > n or j = n) and i > 0 do
											j := head queens + 1;
											queens := tail queens;
											i := i - 1
										end
									else
										j := j + 1
									end
								end
							end;
							i := i + 1
						end
					end;
				queens
			end
		end
	end
	in
(solve 8)
end
end
$
